<Application x:Class="Appysights.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Appysights.Converters"
             xmlns:local="clr-namespace:Appysights">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <local:AppBootstrapper x:Key="bootstrapper" />
                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                    <converters:DateToOffsetConverter x:Key="DateToColorConverter"/>
                    <converters:HamuburgerMenuItemConverter x:Key="HamuburgerMenuItemConverter"/>
                    <converters:SelectedItemConverter x:Key="SelectedItemConverter"/>
                </ResourceDictionary>
                
                <!--Busy Indicator-->
                <ResourceDictionary Source="pack://application:,,,/BusyIndicator;component/Theme/Default.xaml"/>
                
                <!--Mahapps-->
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Themes/Dark.Steel.xaml" />
                
                <!--IconPack-->
                <ResourceDictionary>
                    <Style x:Key="PackIconStyle" TargetType="{x:Type local:IconPack}">
                        <Setter Property="Padding" Value="0" />
                        <Setter Property="FlowDirection" Value="LeftToRight" />
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Stretch" />
                        <Setter Property="IsTabStop" Value="False" />
                        <Setter Property="SnapsToDevicePixels" Value="False" />
                        <Setter Property="UseLayoutRounding" Value="False" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type local:IconPack}">
                                    <Grid>
                                        <Border Background="{TemplateBinding Background}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Grid x:Name="PART_InnerGrid"
                                              RenderTransformOrigin="0.5 0.5"
                                              Margin="{TemplateBinding BorderThickness}">
                                            <Viewbox Margin="{TemplateBinding Padding}">
                                                <Path Fill="{TemplateBinding Foreground}"
                                              Stretch="Uniform"
                                              Data="{Binding Data, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                              SnapsToDevicePixels="False"
                                              UseLayoutRounding="False" />
                                            </Viewbox>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary>
                    <Color x:Key="Colors.Error">#f44336</Color>
                    <Color x:Key="Colors.HighLight">#1565C0</Color>
                    <SolidColorBrush x:Key="Brushes.HighLight" Color="{StaticResource Colors.HighLight}" />
                    <SolidColorBrush x:Key="Brushes.Error" Color="{StaticResource Colors.Error}" />
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type local:IconPack}" BasedOn="{StaticResource PackIconStyle}" />
        </ResourceDictionary>
    </Application.Resources>
</Application>
